name: Deploy to EC2

on:
  push:
    branches: [ main ] # or your production branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18 # Use your React.js version requirement

    - name: Install dependencies and build
      run: |
        npm install
        npm run build
        
    - name: Create deployment directory on EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          sudo mkdir -p ${{ secrets.EC2_DEPLOY_PATH }}
          sudo chown -R ${{ secrets.EC2_USERNAME }}:${{ secrets.EC2_USERNAME }} /var/www/my-react-app
    - name: Deploy to EC2
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        source: "dist/*"
        target: "/var/www/my-react-app"
        strip_components: 1
        
    - name: Restart Nginx (optional)
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          sudo bash -c 'cat > /etc/nginx/sites-available/my-react-app << EOF
          server {
              listen 80;
              server_name your-domain.com;
              
              root ${{ secrets.EC2_DEPLOY_PATH }};
              index index.html;
              
              location / {
                  try_files \$uri \$uri/ /index.html;
              }
          }
          EOF'
          
          sudo ln -sf /etc/nginx/sites-available/my-react-app /etc/nginx/sites-enabled/
          sudo nginx -t
          sudo systemctl restart nginx